name: Go CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "1.22"
      - run: make install

  lint:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "1.22"
      - run: make lint

  gitleaks:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v4
      - run: make gitleaks

  semgrep:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - run: make semgrep

  terrascan:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v4
      - run: make terrascan

  codeql:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "1.22"
      - run: make codeql

  synk:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v4
      - name: Run Snyk scan
        run: make synk

  # metasploit:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Install Metasploit
  #       run: |
  #         sudo apt-get update
  #         sudo apt-get install -y curl gnupg
  #         curl https://raw.githubusercontent.com/rapid7/metasploit-framework/master/msfinstall > msfinstall
  #         chmod 755 msfinstall
  #         sudo ./msfinstall
  #         which msfconsole
  #         msfconsole --version

  #     - name: Run Metasploit Scan
  #       run: make metasploit MSF_TARGET=175.29.21.210

  # conftest:
  #   runs-on: ubuntu-latest
  #   needs: install  # run after the install job
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Run Conftest security check
  #       run: make conftest

  # opa:
  #   runs-on: ubuntu-latest
  #   needs: install
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Run OPA security check
  #       run: make opa  

  whitesource:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v4
      - name: Run whitesource
        run: make whitesource 

  datameer-mask:
    runs-on: ubuntu-latest
    env:
      DATAMEER_API_TOKEN: dmr_test_ABC123xyz_TOKEN_000
      DATAMEER_BASE_URL: https://demo.datameer.example.com/api
      DATAMEER_JOB_ID: JOB-000-TEST-1234
      DATAMEER_INPUT_TABLE: raw_data_test.csv
      DATAMEER_OUTPUT_TABLE: masked_data_test.csv

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Show envs (test-only)
        run: |
          echo "DATAMEER_BASE_URL=$$DATAMEER_BASE_URL"
          echo "DATAMEER_JOB_ID=$$DATAMEER_JOB_ID"

      - name: Run Datameer masking (simulate)
        run: make datameer-mask

      - name: Upload masked sample
        uses: actions/upload-artifact@v4
        with:
          name: datameer-masked-sample
          path: masked_data_test.csv

  test:
    runs-on: ubuntu-latest
    needs: [install, lint]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "1.22"
      - run: make test

  # owasp:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Set up Docker
  #       uses: docker/setup-buildx-action@v2

      # - name: Run OWASP DAST
      #   run: make owasp OWASP_TARGET=http://175.29.21.210:30010/
